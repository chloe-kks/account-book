{"ast":null,"code":"import axios from 'axios';\nimport crypto from 'crypto';\nexport function onLogin({\n  id,\n  password\n}) {\n  return new Promise((resolve, reject) => {\n    const pw = crypto.createHash('sha512').update(password).digest('base64');\n    const data = {\n      \"header\": {\n        \"DATA_TYPE\": \"3\"\n      },\n      \"dto\": {\n        \"USER_ID\": id,\n        \"USER_PW\": pw\n      }\n    };\n    axios.post('http://192.1.4.246:14000/AB3-5/OJTWEB/ReadUserAccount?action=SO', data).then(response => {\n      const user = response.data.dto;\n\n      if (user != null) {\n        const auth = user.USER_PW === pw;\n\n        if (auth) {\n          window.sessionStorage.setItem('id', user.USER_ID);\n          window.sessionStorage.setItem('lastlogin', user.LAST_LOGIN);\n          resolve(user);\n        } else {\n          reject('not auth');\n        }\n      } else {\n        reject('not exist');\n      }\n    }).catch(e => {\n      console.log(e);\n      reject(e);\n    });\n  });\n}","map":{"version":3,"sources":["/home/moss/OJT/src/auth.js"],"names":["axios","crypto","onLogin","id","password","Promise","resolve","reject","pw","createHash","update","digest","data","post","then","response","user","dto","auth","USER_PW","window","sessionStorage","setItem","USER_ID","LAST_LOGIN","catch","e","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,OAAT,CAAkB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAlB,EAAoC;AACvC,SAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5C,UAAMC,EAAE,GAAGP,MAAM,CAACQ,UAAP,CAAkB,QAAlB,EAA4BC,MAA5B,CAAmCN,QAAnC,EAA6CO,MAA7C,CAAoD,QAApD,CAAX;AACO,UAAMC,IAAI,GAAG;AACT,gBAAU;AACN,qBAAa;AADP,OADD;AAIT,aAAO;AACH,mBAAWT,EADR;AAEH,mBAAWK;AAFR;AAJE,KAAb;AASAR,IAAAA,KAAK,CAACa,IAAN,CAAW,iEAAX,EAA8ED,IAA9E,EACCE,IADD,CACMC,QAAQ,IAAI;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACH,IAAT,CAAcK,GAA3B;;AACA,UAAID,IAAI,IAAI,IAAZ,EAAiB;AACb,cAAME,IAAI,GAAIF,IAAI,CAACG,OAAL,KAAiBX,EAA/B;;AACA,YAAGU,IAAH,EAAQ;AACJE,UAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,IAA9B,EAAoCN,IAAI,CAACO,OAAzC;AACAH,UAAAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,WAA9B,EAA2CN,IAAI,CAACQ,UAAhD;AACAlB,UAAAA,OAAO,CAACU,IAAD,CAAP;AACH,SAJD,MAIK;AACDT,UAAAA,MAAM,CAAC,UAAD,CAAN;AACH;AACJ,OATD,MASK;AACDA,QAAAA,MAAM,CAAC,WAAD,CAAN;AACH;AACJ,KAfD,EAeGkB,KAfH,CAeUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAnB,MAAAA,MAAM,CAACmB,CAAD,CAAN;AACH,KAlBD;AAmBH,GA9BM,CAAP;AA+BH","sourcesContent":["import axios from 'axios';\nimport crypto from 'crypto';\n\nexport function onLogin ({ id, password }) {\n    return new Promise ((resolve, reject) => {\n\tconst pw = crypto.createHash('sha512').update(password).digest('base64');\n        const data = {\n            \"header\": {\n                \"DATA_TYPE\": \"3\"\n            },\n            \"dto\": {\n                \"USER_ID\": id,\n                \"USER_PW\": pw\n            }\n        }\n        axios.post('http://192.1.4.246:14000/AB3-5/OJTWEB/ReadUserAccount?action=SO', data)\n        .then(response => {\n            const user = response.data.dto;\n            if (user != null){\n                const auth = (user.USER_PW === pw);\n                if(auth){\n                    window.sessionStorage.setItem('id', user.USER_ID);\n                    window.sessionStorage.setItem('lastlogin', user.LAST_LOGIN);\n                    resolve(user);\n                }else{\n                    reject('not auth');\n                }\n            }else{\n                reject('not exist');\n            }\n        }).catch((e) => {\n            console.log(e);\n            reject(e)\n        });\n    })\n}\n"]},"metadata":{},"sourceType":"module"}