{"ast":null,"code":"var _jsxFileName = \"/home/moss/OJT/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, createRef } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { onLogin } from './auth';\nimport AuthRoute from './AuthRoute';\nimport Home from './Pages/Home';\nimport Login from './Pages/Login';\nimport Main from './Pages/Main';\nimport Sign from './Pages/Sign';\nimport Card from './Pages/Card';\nimport Payment from './Pages/Payment';\nimport UserInfoPw from './Pages/UserInfoPw';\nimport UserInfoChange from './Pages/UserInfoChange';\nimport Deny from './Pages/Deny';\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Footer\n} = Layout; // function onLogin ({ id, password }) {\n//   return new Promise ((resolve, reject) => {\n//       // const user = users.find(user => user.id === id && user.password === password);\n//       // console.log(user)\n//       // return user;\n//       const data = {\n//           \"header\": {\n//               \"DATA_TYPE\": \"3\"\n//           },\n//           \"dto\": {\n//               \"USER_ID\": id,\n//               \"USER_PW\": password\n//           }\n//       }\n//       var result;\n//       axios.post('http://192.1.4.246:14000/AB3-5/OJTWEB/ReadUserAccount?action=SO', data)\n//       .then(response => {\n//           const user = response.data.dto;\n//           const auth = (user.USER_PW === password);\n//           console.log('Axios return: '+JSON.stringify(user))\n//           resolve(user);\n//       }).catch((e) => {\n//           console.log('axios error');\n//           reject(e)\n//       });\n//     })\n// }\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  const authenticated = window.sessionStorage.getItem('id') != null;\n  const id = window.sessionStorage.getItem('id');\n  const lastlogin = window.sessionStorage.getItem('lastlogin'); // const login = ({ id, password }) => {\n  //   const { data: userinfo, error, isLoading } = useAsync({\n  //     promiseFn: onLogin\n  //   })\n  //   setUser(userinfo);\n  // }\n\n  const login = ({\n    id,\n    password\n  }) => {\n    onLogin({\n      id,\n      password\n    }).then(response => setUser(response)).catch(e => {\n      console.log(e);\n      alert('로그인에 실패하였습니다.');\n    }); // setUser(onLogin({ id, password }));\n  };\n\n  const logout = () => setUser(null); // console.log('App has User: '+JSON.stringify(user));\n\n\n  console.log(authenticated);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          render: props => /*#__PURE__*/_jsxDEV(Login, {\n            authenticated: authenticated,\n            login: login,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign\",\n          component: Sign\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n          authenticated: authenticated,\n          path: \"/main\",\n          render: props => /*#__PURE__*/_jsxDEV(Main, {\n            userid: id,\n            lastlogin: lastlogin,\n            logout: logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n          authenticated: authenticated,\n          path: \"/card\",\n          render: props => /*#__PURE__*/_jsxDEV(Card, {\n            userid: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n          authenticated: authenticated,\n          path: \"/payment\",\n          render: props => /*#__PURE__*/_jsxDEV(Payment, {\n            userid: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n          authenticated: authenticated,\n          path: \"/userinfo/pw\",\n          render: props => /*#__PURE__*/_jsxDEV(UserInfoPw, {\n            userid: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AuthRoute, {\n          authenticated: authenticated,\n          path: \"/userinfo/change\",\n          render: props => /*#__PURE__*/_jsxDEV(UserInfoChange, {\n            userid: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: Deny\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: {\n        textAlign: 'center',\n        borderTop: '1px solid #e4e8eb',\n        backgroundColor: '#fafbfc'\n      },\n      children: \"TmaxBI \\xA92021 Created by AB3-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = App;\nexport default App;\n{\n  /* <AuthRoute authenticated={authenticated}\n  path='/card'\n  render={props =>  (\n   <Card userid={user.USER_ID} />\n  )}\n  />\n  <AuthRoute authenticated={authenticated}\n  path='/payment'\n  render={props =>  (\n   <Payment userid={user.USER_ID} />\n  )}\n  />\n  <AuthRoute authenticated={authenticated}\n  path='/userinfo/pw'\n  render={props =>  (\n   <UserInfoPw userid={user.USER_ID} />\n  )}\n  />\n  <AuthRoute authenticated={authenticated}\n  path='/userinfo/change'\n  render={props =>  (\n   <UserInfoChange userid={user.USER_ID} />\n  )}\n  />\n  <AuthRoute authenticated={authenticated}\n  path='/file' \n  render={props =>  (\n   <File userid={user.USER_ID} />\n  )}\n  />   */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/moss/OJT/src/App.js"],"names":["React","useState","createRef","BrowserRouter","Router","Route","Switch","Button","onLogin","AuthRoute","Home","Login","Main","Sign","Card","Payment","UserInfoPw","UserInfoChange","Deny","Layout","Footer","App","user","setUser","authenticated","window","sessionStorage","getItem","id","lastlogin","login","password","then","response","catch","e","console","log","alert","logout","props","textAlign","borderTop","backgroundColor"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState, createRef } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Button } from 'antd';\n\nimport { onLogin } from './auth';\nimport AuthRoute from './AuthRoute';\nimport Home from './Pages/Home';\nimport Login from './Pages/Login';\nimport Main from './Pages/Main';\nimport Sign from './Pages/Sign';\nimport Card from './Pages/Card';\nimport Payment from './Pages/Payment';\nimport UserInfoPw from './Pages/UserInfoPw';\nimport UserInfoChange from './Pages/UserInfoChange';\nimport Deny from './Pages/Deny';\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nconst { Footer } = Layout;\n\n// function onLogin ({ id, password }) {\n//   return new Promise ((resolve, reject) => {\n//       // const user = users.find(user => user.id === id && user.password === password);\n//       // console.log(user)\n//       // return user;\n//       const data = {\n//           \"header\": {\n//               \"DATA_TYPE\": \"3\"\n//           },\n//           \"dto\": {\n//               \"USER_ID\": id,\n//               \"USER_PW\": password\n//           }\n//       }\n//       var result;\n//       axios.post('http://192.1.4.246:14000/AB3-5/OJTWEB/ReadUserAccount?action=SO', data)\n//       .then(response => {\n//           const user = response.data.dto;\n//           const auth = (user.USER_PW === password);\n//           console.log('Axios return: '+JSON.stringify(user))\n//           resolve(user);\n//       }).catch((e) => {\n//           console.log('axios error');\n//           reject(e)\n//       });\n//     })\n// }\n\nfunction App() {\n  const [user, setUser] = useState();\n  const authenticated = window.sessionStorage.getItem('id') != null;\n  const id = window.sessionStorage.getItem('id');\n  const lastlogin = window.sessionStorage.getItem('lastlogin');\n  // const login = ({ id, password }) => {\n  //   const { data: userinfo, error, isLoading } = useAsync({\n  //     promiseFn: onLogin\n  //   })\n  //   setUser(userinfo);\n  // }\n  const login = ({ id, password }) => {\n    onLogin({ id, password })\n    .then(response => setUser(response))\n    .catch((e) => { \n      console.log(e)\n      alert('로그인에 실패하였습니다.')\n    });\n    // setUser(onLogin({ id, password }));\n  }\n  const logout = () => setUser(null);\n  // console.log('App has User: '+JSON.stringify(user));\n  console.log(authenticated);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/' component={ Home } />\n          <Route\n            path='/login'\n            render={props => (\n              <Login authenticated={authenticated} login={login} {...props} />\n            )}\n          />\n          <Route path='/sign' component={ Sign } />\n          <AuthRoute\n          authenticated={authenticated}\n          path='/main'\n          render={props =>  (\n            <Main userid={id} lastlogin={lastlogin} logout={logout} />\n          )}\n          />\n          <AuthRoute authenticated={authenticated}\n          path='/card'\n          render={props =>  (\n            <Card userid={id} />\n          )}\n          />\n          <AuthRoute authenticated={authenticated}\n          path='/payment'\n          render={props =>  (\n            <Payment userid={id} />\n          )}\n          />\n          <AuthRoute authenticated={authenticated}\n          path='/userinfo/pw'\n          render={props =>  (\n            <UserInfoPw userid={id} />\n          )}\n          />\n          <AuthRoute authenticated={authenticated}\n          path='/userinfo/change'\n          render={props =>  (\n            <UserInfoChange userid={id} />\n          )}\n          />\n          <Route path='/' component={ Deny } />\n        </Switch>\n      </Router>\n      <Footer style={{ textAlign: 'center',  borderTop: '1px solid #e4e8eb', backgroundColor: '#fafbfc'}}>TmaxBI ©2021 Created by AB3-5</Footer>\n    </div>\n  );\n}\n\nexport default App;\n\n{/* <AuthRoute authenticated={authenticated}\npath='/card'\nrender={props =>  (\n  <Card userid={user.USER_ID} />\n)}\n/>\n<AuthRoute authenticated={authenticated}\npath='/payment'\nrender={props =>  (\n  <Payment userid={user.USER_ID} />\n )}\n/>\n<AuthRoute authenticated={authenticated}\npath='/userinfo/pw'\nrender={props =>  (\n  <UserInfoPw userid={user.USER_ID} />\n)}\n/>\n<AuthRoute authenticated={authenticated}\npath='/userinfo/change'\nrender={props =>  (\n  <UserInfoChange userid={user.USER_ID} />\n)}\n/>\n<AuthRoute authenticated={authenticated}\npath='/file' \nrender={props =>  (\n  <File userid={user.USER_ID} />\n)}\n/>   */}"]},"metadata":{},"sourceType":"module"}